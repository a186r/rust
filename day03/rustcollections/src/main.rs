// 1.vector允许我们一个挨着一个的存储一系列数量可变的值
// 2.字符串是一个字符的集合
// 3.hash map允许我们将值与一个特定的键相关联，这是一个叫做map的更通用的数据结构的特定实现。

// -------------------------------------------新建vector
// 新建一个空的vector来存储i32类型的值
// let v: Vec<i32> = Vc::new();
// 使用vec!宏会根据我们的值来创建一个新的Vec
// let v = vec![1,2,3];


// ------------------------------------------更新vector
// 对于新建一个vector并向其增加元素，可以使用push方法
let mut v = Vec::new();

v.push(5);
v.push(6);
v.push(7);
v.push(8);

// 丢弃vector时也会丢弃其所有元素
// 0x3653a70Fb30bf5c33B06452F92fF03A67084b6FB
// ------------------------------------------读取vector的元素
let v = vec![1,2,3,4,5];
// 使用&和[]返回一个引用
let third: &i32 = &v[2];
// 2018年09月06日18:45:17
let third: Option<&i32> = v.get(2);